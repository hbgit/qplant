name: Flutter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  # Job to test and analyze app
  test:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.2.3'
        channel: 'dev'

    - run: flutter pub get
    # run static analys code
    - run: flutter  analyze
    #- run: flutter test
    ## run  flutter widgets tests  and unit tests
    #- run: flutter test --coverage
    #- name: Upload coverage to Codecov
    #  uses: codecov/codecov-action@v1
    #  with:
    #    token: ${{ secrets.CODECOV_TOKEN }}
    #    file: coverage/lcov.info


  # Job to build app and deploy
  build_deploy:
    #if conditional to prevent a job from running
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    #Identifies any jobs that must complete successfully before this job will run.    
    needs: test
    name: Build apk and web deploy
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.2.3'
          channel: 'dev'
      
      # This action sets up a java environment
      # https://github.com/actions/setup-java
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      
          # Enable linux,macos,windows and web
      - run: flutter  config --enable-web
      - run: flutter  config --enable-linux-desktop
      #- run: flutter  config --enable-macos-desktop
      - run: flutter  config --enable-windows-desktop
      - run: flutter build apk --debug --split-per-abi
      - name: Create a Release APK
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/debug/*.apk"
          draft: 'true'
          tag: 'v1.0.0'
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install SSH Client ðŸ”‘
        uses: webfactory/ssh-agent@v0.2.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      # This action will create a github release and optionally upload an artifact to it.
      - run: flutter build web
      # Handle the deploy process of your project to GitHub Pages.
      # The site will be published as <yourusername>.github.io/<repo-name>
      # https://github.com/JamesIves/github-pages-deploy-action
      - uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          SSH: true
          BASE_BRANCH: main
          BRANCH: gh-pages
          FOLDER: build/web



